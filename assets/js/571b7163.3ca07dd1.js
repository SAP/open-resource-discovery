"use strict";(self.webpackChunk_sap_open_resource_discovery=self.webpackChunk_sap_open_resource_discovery||[]).push([[1719],{6008:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"spec-extensions/index","title":"Specification Extensions","description":"Open Resource Discovery itself can be understood as a core specification that allows to be extended through specification extensions.","source":"@site/docs/spec-extensions/index.md","sourceDirName":"spec-extensions","slug":"/spec-extensions/","permalink":"/open-resource-discovery/spec-extensions/","draft":false,"unlisted":false,"editUrl":"https://github.com/open-resource-discovery/specification/tree/main/docs/spec-extensions/index.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"hide_table_of_contents":true,"sidebar_class_name":"hidden"},"sidebar":"specExtensionsSidebar","previous":{"title":"SAP CMP mTLS v1","permalink":"/open-resource-discovery/spec-extensions/access-strategies/sap-cmp-mtls-v1"},"next":{"title":"ORD Policy Levels","permalink":"/open-resource-discovery/spec-extensions/policy-levels/"}}');var t=n(4848),o=n(8453);const r={sidebar_position:2,hide_table_of_contents:!0,sidebar_class_name:"hidden"},c="Specification Extensions",a={},d=[];function l(e){const s={a:"a",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"specification-extensions",children:"Specification Extensions"})}),"\n",(0,t.jsxs)(s.p,{children:["Open Resource Discovery itself can be understood as a ",(0,t.jsx)(s.strong,{children:"core specification"})," that allows to be extended through specification extensions."]}),"\n",(0,t.jsx)(s.p,{children:"Those specification extensions that have been centrally aligned can be hosted on the ORD Specification page itself, with their own version lifecycle."}),"\n",(0,t.jsx)(s.p,{children:"Most notably, you'll find:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.a,{href:"/open-resource-discovery/spec-extensions/access-strategies/",children:["Registered ",(0,t.jsx)(s.strong,{children:"Access Strategies"})]})," that standardize how ORD information can be accessed by the ORD Aggregators."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.a,{href:"/open-resource-discovery/spec-extensions/access-strategies/",children:["Registered ",(0,t.jsx)(s.strong,{children:"Policy Levels"})]})," that standardize (ideally verifiable) rules how ORD should be implemented by ORD Providers."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.a,{href:"/open-resource-discovery/spec-extensions/group-types/",children:["Registered ",(0,t.jsx)(s.strong,{children:"Global Group Types"})]})," for globally aligned and pre-defined group types (and potentially also predefined group instances)."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Specification Extensions have registered ",(0,t.jsx)(s.a,{href:"/open-resource-discovery/spec-v1/#specification-id",children:"Specification IDs"}),"."]})]})}function p(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var i=n(6540);const t={},o=i.createContext(t);function r(e){const s=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:s},e.children)}}}]);